const { Computer } = require('./computer');
const mainframe = [3,8,1001,8,10,8,105,1,0,0,21,38,63,72,81,106,187,268,349,430,99999,3,9,101,5,9,9,1002,9,3,9,101,3,9,9,4,9,99,3,9,102,3,9,9,101,4,9,9,1002,9,2,9,1001,9,2,9,1002,9,4,9,4,9,99,3,9,1001,9,3,9,4,9,99,3,9,102,5,9,9,4,9,99,3,9,102,4,9,9,1001,9,2,9,1002,9,5,9,1001,9,2,9,102,3,9,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,1,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,99];

const runScenario = ampSettings => {
  let currentOutput = 0;
  for (i of ampSettings)
  {
    const c = new Computer([...mainframe], {
      input: [i, currentOutput]
    })
    i = c.runComputer();
    i.next().value;
    currentOutput = c.shiftOutput();
  }
  return currentOutput
}

let currentMax = 0;
for (let x1 = 0; x1 < 5; x1++) {
  for (let x2 = 0; x2 < 5; x2++) {
    if (x2 == x1) continue;
    for (let x3 = 0; x3 < 5; x3++) {
      if (x3 == x1 || x3 == x2) continue;
      for (let x4 = 0; x4 < 5; x4++) {
        if (x4 == x1 || x4 == x2 || x4 == x3) continue;
        for (let x5 = 0; x5 < 5; x5++) {
          if (x5 == x1 || x5 == x2 || x5 == x3 || x5 == x4) continue;
          const current = runScenario([x1, x2, x3, x4, x5]);
          if (current > currentMax) currentMax = current;
        }
      }
    }
  }
}
console.log(currentMax);
test("dummy", () => { })
